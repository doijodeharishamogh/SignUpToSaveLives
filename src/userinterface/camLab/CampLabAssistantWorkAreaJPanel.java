/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.camLab;

import userinterface.LabAssistantRole.*;
import Business.EcoSystem;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Veena Iyer
 */
public class CampLabAssistantWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private LabOrganization labOrganization;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public CampLabAssistantWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.labOrganization = (LabOrganization)organization;
        
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)labrequestjTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : labOrganization.getWorkQueue().getWorkRequestList()){
            
                Object[] row = new Object[5];
                row[0] = ((LabTestWorkRequest) request).getDonorID();
                row[1] = request;
                row[2] = request.getSender().getEmployee().getName();
                row[3] = request.getReceiver() == null ? null : ((LabTestWorkRequest)request).getReceiver().getEmployee().getName();
                row[4] = request.getStatus();
                
                model.addRow(row);
            
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        labrequestjTable = new javax.swing.JTable();
        refreshbtn = new javax.swing.JButton();
        assignToMeBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        labrequestjTable.setFont(new java.awt.Font("Goudy Old Style", 1, 20)); // NOI18N
        labrequestjTable.setForeground(new java.awt.Color(51, 102, 255));
        labrequestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DonorID", "Message", "Sender", "Reciever", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(labrequestjTable);
        if (labrequestjTable.getColumnModel().getColumnCount() > 0) {
            labrequestjTable.getColumnModel().getColumn(0).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(2).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(3).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(4).setResizable(false);
        }

        refreshbtn.setBackground(new java.awt.Color(51, 102, 255));
        refreshbtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        refreshbtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshbtn.setText("Refresh");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });

        assignToMeBtn.setBackground(new java.awt.Color(51, 102, 255));
        assignToMeBtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        assignToMeBtn.setForeground(new java.awt.Color(255, 255, 255));
        assignToMeBtn.setText("Assign To Me");
        assignToMeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeBtnActionPerformed(evt);
            }
        });

        processBtn.setBackground(new java.awt.Color(51, 102, 255));
        processBtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        processBtn.setForeground(new java.awt.Color(255, 255, 255));
        processBtn.setText("Process");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 705, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refreshbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(assignToMeBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(processBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshbtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(assignToMeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processBtn)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void assignToMeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeBtnActionPerformed
       int selectedRow = labrequestjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Select one row");
        }
        
        WorkRequest request = (WorkRequest)labrequestjTable.getValueAt(selectedRow, 1);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();
        JOptionPane.showMessageDialog(this, "Job assigned");
    }//GEN-LAST:event_assignToMeBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        int selectedRow = labrequestjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Select one row");
            return;
        }
        LabTestWorkRequest request = (LabTestWorkRequest)labrequestjTable.getValueAt(selectedRow, 1);
        if(((LabTestWorkRequest)request).getReceiver().toString().isEmpty()){
            JOptionPane.showMessageDialog(this, "First Assign the Request to proceed");
        }else{
            request.setStatus("Processing");
            CampProcessWorkRequestJPanel campProcessWorkRequestJPanel = new CampProcessWorkRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("campProcessWorkRequestJPanel", campProcessWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_processBtnActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_formFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeBtn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable labrequestjTable;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton refreshbtn;
    // End of variables declaration//GEN-END:variables
}

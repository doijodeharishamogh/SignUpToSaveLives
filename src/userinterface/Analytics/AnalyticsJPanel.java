/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Analytics;

import Business.Chart.PieChart;
import Business.EcoSystem;
import Business.Enterprise.CampEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.PatientAccount;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;

/**
 *
 * @author HP
 */
public class AnalyticsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalyticsJPanel
     */
    private EcoSystem ecosystem;
    private double hCount;
    private double lCount;
    private double kCount;
    private double eCount;
    private double diabetis;
    private double hypertension;
    private double smoke;
    private double drink;
    private double asthama;
    private double epilepsy;
    private double heart;
    private double stroke;
    private double std;
    private double hepatitis,hiv;
    public AnalyticsJPanel(EcoSystem ecosystem) {
        this.ecosystem=ecosystem;
        initComponents();
        populateProfessionComboBox();
        populateDiseaseCombobox();
    }
    public void populateDiseaseCombobox(){
        diseaseComboBox.addItem("Heart");
        diseaseComboBox.addItem("Kidney");
        diseaseComboBox.addItem("Liver");
        diseaseComboBox.addItem("Eyes");
        
    }
    public void populateProfessionComboBox(){
        professionComboBox.addItem("Information Technology");
        professionComboBox.addItem("Government");
        professionComboBox.addItem("Military Service");
        professionComboBox.addItem("Agriculture");
    }
    /**
     * This method is called from within the constructor to initialize the form.     * WARNING: Do NOT modify this code. The content of this method is always

     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Show = new javax.swing.JButton();
        professionComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CampName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CampNumber = new javax.swing.JLabel();
        Show1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        diseaseComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 600));

        Show.setBackground(new java.awt.Color(51, 102, 255));
        Show.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        Show.setForeground(new java.awt.Color(255, 255, 255));
        Show.setText("Show");
        Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowActionPerformed(evt);
            }
        });

        professionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professionComboBoxActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Statistics of Organ Failures Based on Occupation: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addComponent(professionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(Show, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Show)
                    .addComponent(professionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(126, 126, 126)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Analytics1", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Camp with Max Donors");

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Camp Name:");

        CampName.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        CampName.setForeground(new java.awt.Color(51, 102, 255));
        CampName.setText("<Campname>");

        jLabel4.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Number:");

        CampNumber.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        CampNumber.setForeground(new java.awt.Color(51, 102, 255));
        CampNumber.setText("<Name>");

        Show1.setBackground(new java.awt.Color(51, 102, 255));
        Show1.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        Show1.setForeground(new java.awt.Color(255, 255, 255));
        Show1.setText("Show");
        Show1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CampName)
                        .addGap(88, 88, 88)
                        .addComponent(Show1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CampNumber))
                    .addComponent(jLabel1))
                .addContainerGap(322, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CampName)
                    .addComponent(Show1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CampNumber))
                .addContainerGap(559, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Analytics2", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("Reasons for a particular Organ failure:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addComponent(diseaseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addContainerGap(162, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(diseaseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(82, 82, 82)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Analytics3", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowActionPerformed
        String type=professionComboBox.getSelectedItem().toString();
        switch(type){
        case "Information Technology": 
                   findNumbers(type);
                   drawPieChart("Organ failures for IT occupation",hCount,lCount,kCount,eCount);
                   break;
        case "Government": 
                   findNumbers(type);
                   drawPieChart("Organ failures for Government occupation",hCount,lCount,kCount,eCount);
                   break;
        case "Military Service": 
                   findNumbers(type);
                   drawPieChart("Organ failures for Military occupation",hCount,lCount,kCount,eCount);
                   break;
        case "Agriculture": 
                   findNumbers(type);
                   drawPieChart("Organ failures for Agriculture occupation",hCount,lCount,kCount,eCount);
                   break;
        default: JOptionPane.showMessageDialog(this, "please select one");
    }   
    }//GEN-LAST:event_ShowActionPerformed
    public void drawPieChart(String str,double hCount,double lCount,double kCount,double eCount){
        PieChart pieChart = new PieChart(str);
        JFreeChart chart = pieChart.createChart(str,pieChart.createDataset(hCount,lCount,kCount,eCount));
        ChartPanel chartpanel = new ChartPanel(chart);
        jPanel4.add(chartpanel,BorderLayout.CENTER);
        //jPanel4.setSize(500, 500);
        jPanel4.setVisible(true);
        //chart.setSize(500, 500);
        //RefineryUtilities.centerFrameOnScreen(chart);
        //chart.setVisible(true);
    }
    
    public void findNumbers(String type){
        hCount=0;
        lCount=0;
        eCount=0;
        kCount=0; 
        for(Network network : ecosystem.getNetworkList()){
            for(Enterprise ent:network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org: ent.getOrganizationDirectory().getOrganizationList()){
                    for(PatientAccount pnt : org.getPatientAccountDirectory().getPatientList()){
                         if(pnt.getProfessionType().toString().equals(type) && pnt.getOrganType()!=null && pnt.getOrganType().toString().equals("Heart")){
                             hCount=hCount+1;
                         }
                         if(pnt.getProfessionType().toString().equals(type) && pnt.getOrganType()!=null && pnt.getOrganType().toString().equals("Kidney")){
                             kCount=kCount+1;
                         }
                         if(pnt.getProfessionType().toString().equals(type) && pnt.getOrganType()!=null && pnt.getOrganType().toString().equals("Eyes")){
                             eCount=eCount+1;
                         }
                         if(pnt.getProfessionType().toString().equals(type) && pnt.getOrganType()!=null && pnt.getOrganType().toString().equals("Liver")){
                             lCount=lCount+1;
                         }
                    }
                }
            }
        }
    }
    private void professionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professionComboBoxActionPerformed
        
        
    }//GEN-LAST:event_professionComboBoxActionPerformed
    
    public void drawDiseasePieChart(String str,double diabetis,double hypertension,double smoke,double drink,double asthama,double epilepsy,double heart,double stroke,double std,double hepatitis,double hiv){
        PieChart pieChart = new PieChart("Reason for particular organ failure");
        JFreeChart chart = pieChart.createChart(str,pieChart.createDiseaseDataset(diabetis, hypertension, smoke, drink, asthama, epilepsy, hepatitis, stroke, std, hepatitis, hiv));
        ChartPanel chartpanel = new ChartPanel(chart);
        jPanel5.add(chartpanel, BorderLayout.CENTER);
        jPanel5.setVisible(true);
        //chart.setSize(500, 500);
        //RefineryUtilities.centerFrameOnScreen(chart);
        //chart.setVisible(true);
    }
    
    public void findDiseaseNum(String type){
        diabetis=0;
        hypertension=0;
        smoke=0;
        drink=0;
        asthama=0;
        epilepsy=0;
        heart=0;
        stroke=0;
        std=0;
        hepatitis=0;
        hiv=0;
        for(Network network : ecosystem.getNetworkList()){
            for(Enterprise ent:network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org: ent.getOrganizationDirectory().getOrganizationList()){
                    for(PatientAccount pnt : org.getPatientAccountDirectory().getPatientList()){
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isDiabetic()){
                            diabetis=diabetis+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isHypertension()){
                            hypertension=hypertension+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isDoesSmoke()){
                            smoke=smoke+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isDoesDrink()){
                            drink=drink+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isHasAsthama()){
                            asthama=asthama+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isEpilepsy()){
                            epilepsy=epilepsy+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isHeartdisease()){
                            heart=heart+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isStroke()){
                            stroke=stroke+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isStd()){
                            std=std+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isHepatitis()){
                            hepatitis=hepatitis+1;
                        }
                        if(pnt.getOrganType().toString().equalsIgnoreCase(type) && pnt.getOrganType()!=null && pnt.isHIV()){
                            hiv=hiv+1;
                        }
                    }
                }
            }
        }
    }
    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        
    }//GEN-LAST:event_jPanel2FocusGained

    private void Show1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show1ActionPerformed
        Map<String,Integer> campDonor = new HashMap<>();
                for(Network network : ecosystem.getNetworkList()){
            for(Enterprise ent:network.getEnterpriseDirectory().getEnterpriseList()){
                if(ent instanceof CampEnterprise){
                    CampEnterprise e=(CampEnterprise)ent;
                    int Size=e.getPotentialDonorAccountDirectory().getPotentialDonorList().size();
                    campDonor.put(e.getName(), Size);
                }
            }
        }
        
        List<Map.Entry<String, Integer> > list =new ArrayList<Map.Entry<String, Integer> >(campDonor.entrySet());
        Collections.sort(list, new Comparator<Map.Entry<String, Integer>>() {
          @Override
          public int compare(Map.Entry<String, Integer> num1,Map.Entry<String, Integer> num2){
              return num2.getValue()- num1.getValue();
          }
        });
        CampName.setText(list.get(0).getKey());
        CampNumber.setText(list.get(0).getValue().toString());
    }//GEN-LAST:event_Show1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String type1=diseaseComboBox.getSelectedItem().toString();
        switch(type1){
            case "Heart": findDiseaseNum(type1);
                          drawDiseasePieChart("Reasons for heart failure",diabetis, hypertension, smoke, drink, asthama, epilepsy, hepatitis, stroke, std, hepatitis, hiv);
                          break;
            case "Liver": findDiseaseNum(type1);
                          drawDiseasePieChart("Reasons for Liver failure",diabetis, hypertension, smoke, drink, asthama, epilepsy, hepatitis, stroke, std, hepatitis, hiv);
                          break;
            case "Kidney": findDiseaseNum(type1);
                          drawDiseasePieChart("Reasons for Kidney failure",diabetis, hypertension, smoke, drink, asthama, epilepsy, hepatitis, stroke, std, hepatitis, hiv);
                          break;
            case "Eyes":  findDiseaseNum(type1);
                          drawDiseasePieChart("Reasons for eyes failure",diabetis, hypertension, smoke, drink, asthama, epilepsy, hepatitis, stroke, std, hepatitis, hiv);
                          break;
            default: JOptionPane.showMessageDialog(this, "please select one");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CampName;
    private javax.swing.JLabel CampNumber;
    private javax.swing.JButton Show;
    private javax.swing.JButton Show1;
    private javax.swing.JComboBox<String> diseaseComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JComboBox<String> professionComboBox;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.campDoctor;

import Business.Appointment.Appointment;
import Business.Enterprise.CampEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.UNOSEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.DonorAccount;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CampUNOSWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Veena Iyer
 */
public class CampDoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private CampEnterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private UNOSEnterprise UNOS;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CampDoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = (CampEnterprise)enterprise;
        this.userAccount = account;
        this.network=network;
        valueLabel.setText(enterprise.getName());
        populateRequestTable();
    }
    
    public void setEligibilityofDonor(){
        
    }
    
    public void populateDonorTable1(){
        if(jDateChooser1.getDate()!=null){
            try {
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yyyy");
                String s = simpleDateFormat.format(jDateChooser1.getDate());
                Date d = simpleDateFormat.parse(s);
                int nowDocID=userAccount.getEmployee().getId();
                DefaultTableModel model = (DefaultTableModel) tblDonor.getModel();
                model.setRowCount(0);
                for(Appointment appointment : enterprise.getAppointmentDirectory().getAppointmentList()){
                    if(appointment.getDocID()==nowDocID){
                        if(appointment.getDate().compareTo(d)==0){
                            for(DonorAccount donor : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
                                Object[] row = new Object[model.getColumnCount()];
                                if((donor.getId()==appointment.getDonorID())&&!donor.isChecked()){
                                    row[0]=donor;
                                    row[1]=donor.getFirstName();
                                    row[2]=donor.getLastName();
                                    if(appointment.isSlot10to11()){
                                        row[3]="10AM-11AM";
                                    }
                                    if(appointment.isSlot11to12()){
                                        row[3]="11AM-12PM";
                                    }
                                    if(appointment.isSlot12to01()){
                                        row[3]="12PM-1PM";
                                    }
                                    model.addRow(row);
                                }
                            }
                        }
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(CampDoctorWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void populateDonorTable(){
        DefaultTableModel model = (DefaultTableModel) tblDonor.getModel();
        model.setRowCount(0);
        for(DonorAccount donor : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
            Object[] row = new Object[model.getColumnCount()];
            row[0]=donor;
            row[1]=donor.getFirstName();
            row[2]=donor.getLastName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reqLabTestBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        labrequestjTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        refreshbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonor = new javax.swing.JTable();
        btnSendToUnos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnGet = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnCheck = new javax.swing.JButton();
        btnDeceased = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        reqLabTestBtn.setBackground(new java.awt.Color(51, 102, 255));
        reqLabTestBtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        reqLabTestBtn.setForeground(new java.awt.Color(255, 255, 255));
        reqLabTestBtn.setText("Request Lab Test");
        reqLabTestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqLabTestBtnActionPerformed(evt);
            }
        });

        labrequestjTable.setFont(new java.awt.Font("Goudy Old Style", 1, 20)); // NOI18N
        labrequestjTable.setForeground(new java.awt.Color(51, 204, 255));
        labrequestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DonorID", "Message", "Receiver", "Result", "Status", "Deceased"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(labrequestjTable);
        if (labrequestjTable.getColumnModel().getColumnCount() > 0) {
            labrequestjTable.getColumnModel().getColumn(0).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(1).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(2).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(3).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(4).setResizable(false);
            labrequestjTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Enterprise>> ");

        valueLabel.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(51, 102, 255));

        refreshbtn.setBackground(new java.awt.Color(51, 102, 255));
        refreshbtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        refreshbtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshbtn.setText("Refresh");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });

        tblDonor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DonorID", "First Name", "Last Name", "Time Slot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDonor);

        btnSendToUnos.setBackground(new java.awt.Color(51, 102, 255));
        btnSendToUnos.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        btnSendToUnos.setForeground(new java.awt.Color(255, 255, 255));
        btnSendToUnos.setText("Donate");
        btnSendToUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendToUnosActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 102, 255));
        jLabel1.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Date");

        btnGet.setBackground(new java.awt.Color(51, 102, 255));
        btnGet.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        btnGet.setForeground(new java.awt.Color(255, 255, 255));
        btnGet.setText("Get Sheduled Donors");
        btnGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetActionPerformed(evt);
            }
        });

        btnCheck.setBackground(new java.awt.Color(51, 102, 255));
        btnCheck.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        btnCheck.setForeground(new java.awt.Color(255, 255, 255));
        btnCheck.setText("Check Organ History");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnDeceased.setBackground(new java.awt.Color(51, 102, 255));
        btnDeceased.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        btnDeceased.setForeground(new java.awt.Color(255, 255, 255));
        btnDeceased.setText("Deceased");
        btnDeceased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeceasedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGet, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reqLabTestBtn)
                            .addComponent(refreshbtn, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendToUnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheck, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeceased, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refreshbtn))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reqLabTestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSendToUnos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeceased)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reqLabTestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqLabTestBtnActionPerformed
        int selectedRow = tblDonor.getSelectedRow();
        if(selectedRow>=0){
            DonorAccount donor = (DonorAccount)tblDonor.getValueAt(selectedRow,0);
            donor.setChecked(true);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("CampRequestLabTestJPanel", new CampRequestLabTestJPanel(userProcessContainer, userAccount, enterprise,donor));
            layout.next(userProcessContainer);
        }
        else
            JOptionPane.showMessageDialog(null,"Please select a row!!");
        
    }//GEN-LAST:event_reqLabTestBtnActionPerformed

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_formFocusGained

    private void btnSendToUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendToUnosActionPerformed
        int selectedRow = labrequestjTable.getSelectedRow();
        if(selectedRow>=0){
            String check = String.valueOf(labrequestjTable.getValueAt(selectedRow,3));
            String deceased = String.valueOf(labrequestjTable.getValueAt(selectedRow,5));
            DonorAccount donor = (DonorAccount)labrequestjTable.getValueAt(selectedRow,0);
            if(check.equals("Eligible")&&deceased.equals("YES")){
                for(DonorAccount dnr : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
                    if(donor.getId()==dnr.getId()){
                        donor.setEligible(true);
                        System.out.println("true");
                                for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise instanceof UNOSEnterprise)
                {   
                    UNOS=(UNOSEnterprise)enterprise;
                }
        }
        UNOS.getCampUNOSworkQueue().getWorkRequestList().clear();
        for(DonorAccount donor1 : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
            if(donor.isEligible()){
                UNOS.getCampUNOSworkQueue().getWorkRequestList().add(new CampUNOSWorkRequest(donor1));
                System.out.println("sent successfully");
                labrequestjTable.setValueAt("Details sent to UNOS",selectedRow,4);
                donor.setSentToUNOS(true);
            }
        }
                    }
                }
                
            }
            else
                JOptionPane.showMessageDialog(null,"Donor is not eligible");
        }
        populateRequestTable();
        
//        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
//            if(enterprise instanceof UNOSEnterprise)
//                {   
//                    UNOS=(UNOSEnterprise)enterprise;
//                }
//        }
//        UNOS.getCampUNOSworkQueue().getWorkRequestList().clear();
//        for(DonorAccount donor : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
//            if(donor.isEligible()){
//                UNOS.getCampUNOSworkQueue().getWorkRequestList().add(new CampUNOSWorkRequest(donor));
//                System.out.println("sent successfully");
//            }
//        }
    }//GEN-LAST:event_btnSendToUnosActionPerformed

    private void btnGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetActionPerformed
        
        populateDonorTable1();
    }//GEN-LAST:event_btnGetActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("OrgansListJPanel", new OrgansListJPanel(userProcessContainer, userAccount, enterprise, network));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnDeceasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeceasedActionPerformed
        // TODO add your handling code here:
        int selectedRow = labrequestjTable.getSelectedRow();
        if(selectedRow>=0){
            DonorAccount donor = (DonorAccount)labrequestjTable.getValueAt(selectedRow,0);
            donor.setDeceased(true);
        }
    }//GEN-LAST:event_btnDeceasedActionPerformed
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) labrequestjTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            for(DonorAccount donor : enterprise.getPotentialDonorAccountDirectory().getPotentialDonorList()){
                if(donor.getId()==((LabTestWorkRequest) request).getDonorID()){
                    Object[] row = new Object[6];
                    row[0] = donor;
                    row[1] = request.getMessage();
                    row[2] = request.getReceiver();
                    if(donor.isSentToUNOS())
                        row[4] = "Details sent to UNOS";
                    else
                        row[4] = request.getStatus();
                    if(donor.isDeceased())
                        row[5]="YES";
                    else
                        row[5]="NO";
                    String result = ((LabTestWorkRequest) request).getTestResult();
                    row[3] = result == null ? "Waiting" : result;
                    model.addRow(row);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDeceased;
    private javax.swing.JButton btnGet;
    private javax.swing.JButton btnSendToUnos;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable labrequestjTable;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JButton reqLabTestBtn;
    private javax.swing.JTable tblDonor;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}

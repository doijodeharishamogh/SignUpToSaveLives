/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Appointment.Appointment;
import Business.Assignment.Assignment;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.PatientAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Veena Iyer
 */
public class ScheduleOperationJPanel extends javax.swing.JPanel {

    private Network network;
    private JPanel userProcessContainer;
    private HospitalEnterprise enterprise;
    private DoctorOrganization organization;
    
    public ScheduleOperationJPanel(JPanel userProcessContainer,Network network,Enterprise hospitalEnterprise,DoctorOrganization organization) {
        initComponents();
        this.network = network;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = (HospitalEnterprise)hospitalEnterprise;
        this.organization = organization;
        populatePatientComboBox();
        populateDoctorComboBox();
        populateAppointmentTable();
    }

    public void populatePatientComboBox(){
        patientIdjComboBox.removeAllItems();
        for(Assignment assignment :network.getAssignmentDirectory().getAssignmentList()){
            //if(!assignment.getPatient().isOrganNeeded())
                patientIdjComboBox.addItem(assignment.getPatient().getPatientID());
        }
    }
    
    public void populateDoctorComboBox(){
        doctorIdjComboBox.removeAllItems();
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
              if(organization.getName().equals("Doctor Organization")){
                  for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
                        doctorIdjComboBox.addItem(employee);        }
              }
        }
    }
    
    public void populateAppointmentTable(){
        DefaultTableModel model = (DefaultTableModel) operationDetailsTable.getModel();
        model.setRowCount(0);
        for(Appointment appointment : enterprise.getAppointmentDirectory().getAppointmentList()){
            Object[] row = new Object[model.getColumnCount()];
            row[0]=appointment.getDocName();
            row[1]=appointment.getPatientID();
            row[2]=appointment.getDate();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientIdjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        operationjDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        doctorIdjComboBox = new javax.swing.JComboBox();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        operationDetailsTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        patientIdjComboBox.setFont(new java.awt.Font("Goudy Old Style", 1, 20)); // NOI18N
        patientIdjComboBox.setForeground(new java.awt.Color(102, 204, 255));

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Patient ID");

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Pick Date");

        operationjDateChooser.setBackground(new java.awt.Color(102, 204, 255));

        jLabel4.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Doctor");

        doctorIdjComboBox.setFont(new java.awt.Font("Goudy Old Style", 1, 20)); // NOI18N
        doctorIdjComboBox.setForeground(new java.awt.Color(102, 204, 255));

        addBtn.setBackground(new java.awt.Color(51, 102, 255));
        addBtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add >>");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        operationDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operating Doctor", "PatientID", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(operationDetailsTable);
        if (operationDetailsTable.getColumnModel().getColumnCount() > 0) {
            operationDetailsTable.getColumnModel().getColumn(0).setResizable(false);
            operationDetailsTable.getColumnModel().getColumn(1).setResizable(false);
            operationDetailsTable.getColumnModel().getColumn(2).setResizable(false);
        }

        backBtn.setBackground(new java.awt.Color(51, 102, 255));
        backBtn.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(backBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctorIdjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(operationjDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(patientIdjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(504, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(patientIdjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(operationjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(doctorIdjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(addBtn)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yyyy");
            String stringDate = simpleDateFormat.format(operationjDateChooser.getDate());
            Date date = simpleDateFormat.parse(stringDate);            
            Appointment appointment = enterprise.getAppointmentDirectory().addAppointment();
            Employee employee = (Employee) doctorIdjComboBox.getSelectedItem();
            int patientID = Integer.parseInt(patientIdjComboBox.getSelectedItem().toString());
            appointment.setPatientID(patientID);
            appointment.setDocID(employee.getId());
            appointment.setDocName(String.valueOf(doctorIdjComboBox.getSelectedItem()));
            appointment.setDate(date);
            
            for(PatientAccount patientAccount:enterprise.getPatientAccountDirectory().getPatientList()){
               if(patientAccount.getPatientID()== patientID){
                   patientAccount.setOperatedDate(date);
                   patientAccount.setOperatedBy(String.valueOf(doctorIdjComboBox.getSelectedItem()));
                   patientAccount.setReceivedDonorID(appointment.getDonorID());
               }
            }
            for(PatientAccount patientAccount:organization.getPatientAccountDirectory().getPatientList()){
               if(patientAccount.getPatientID()== patientID){
                   patientAccount.setOperatedDate(date);
                   patientAccount.setOperatedBy(String.valueOf(doctorIdjComboBox.getSelectedItem()));
                   patientAccount.setReceivedDonorID(appointment.getDonorID());
               }
            }
            
            JOptionPane.showMessageDialog(null,"Operation scheduled successfully");
            populateAppointmentTable();
        } catch (ParseException ex) {
            Logger.getLogger(ScheduleOperationJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel doctorWorkAreaJPanel = (DoctorWorkAreaJPanel) component;
        doctorWorkAreaJPanel.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox doctorIdjComboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable operationDetailsTable;
    private com.toedter.calendar.JDateChooser operationjDateChooser;
    private javax.swing.JComboBox patientIdjComboBox;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CertifyingAuthorityRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.UNOSEnterprise;
import Business.Network.Network;
import Business.Organization.CAOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CampCertifyingAuthorityWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class CertifyingAuthorityWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private CAOrganization organization;
    private UNOSEnterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    
    public CertifyingAuthorityWorkArea(JPanel userProcessContainer,CAOrganization organization,
            UNOSEnterprise enterprise,UserAccount userAccount,Network network) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.organization=organization;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.network=network;
        populateCampRegistrationRequestTable();
    }

    public void populateCampRegistrationRequestTable(){
        UNOSEnterprise entr=null;
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList());{
        if(enterprise instanceof UNOSEnterprise){
            entr=enterprise;
        }
    }
    DefaultTableModel model = (DefaultTableModel)workRequestTable.getModel();
    model.setRowCount(0);
    for(WorkRequest request : entr.getCampCertifyingWorkQueue().getWorkRequestList()){
        if(request instanceof CampCertifyingAuthorityWorkRequest){
            CampCertifyingAuthorityWorkRequest ccrequest=(CampCertifyingAuthorityWorkRequest)request;
            Object[] row=new Object[2];
            row[0]=ccrequest;
            row[1]=ccrequest.getPicture();
            model.addRow(row);
        }            
    }    
    List<CampCertifyingAuthorityWorkRequest> ccworkList=new ArrayList<CampCertifyingAuthorityWorkRequest>();
      for(WorkRequest workRequest : entr.getWorkQueue().getWorkRequestList()){
          ccworkList.add((CampCertifyingAuthorityWorkRequest)workRequest);
      }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();
        viewDoc = new javax.swing.JButton();
        displayPic = new javax.swing.JLabel();
        certifyJButton = new javax.swing.JRadioButton();
        notCertifyJButton = new javax.swing.JRadioButton();
        sendCertifyResult = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        workRequestTable.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        workRequestTable.setForeground(new java.awt.Color(51, 102, 255));
        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Camp Name", "Document"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTable);

        viewDoc.setBackground(new java.awt.Color(51, 102, 255));
        viewDoc.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        viewDoc.setText("View");
        viewDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDocActionPerformed(evt);
            }
        });

        certifyJButton.setBackground(new java.awt.Color(51, 102, 255));
        certifyJButton.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        certifyJButton.setText("Certified");

        notCertifyJButton.setBackground(new java.awt.Color(51, 102, 255));
        notCertifyJButton.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        notCertifyJButton.setText("Not Certified");

        sendCertifyResult.setBackground(new java.awt.Color(51, 102, 255));
        sendCertifyResult.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        sendCertifyResult.setText("Camp >>");
        sendCertifyResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendCertifyResultActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("                                                     Welcome Certifying Authority");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayPic, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(certifyJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(notCertifyJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sendCertifyResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(viewDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(certifyJButton)
                        .addGap(28, 28, 28)
                        .addComponent(notCertifyJButton)
                        .addGap(26, 26, 26)
                        .addComponent(sendCertifyResult, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(displayPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDocActionPerformed
        
        int row = workRequestTable.getSelectedRow();
        if(0<=row){
            CampCertifyingAuthorityWorkRequest ccrequest=(CampCertifyingAuthorityWorkRequest)workRequestTable.getValueAt(row, 0);
            if(null!= ccrequest.getPicture()){
                Image myImage;
                try {
                    //Read the image from the URL placed in the class
                    myImage = ImageIO.read(new File(ccrequest.getPicture()));
                    myImage = myImage.getScaledInstance(200, 200, java.awt.Image.SCALE_SMOOTH);
                    ImageIcon myImageIcon = new ImageIcon(myImage);
                    //add the image to the label
                    displayPic.setIcon(myImageIcon);
               
                }catch (IOException ex) {
                    Logger.getLogger(CertifyingAuthorityWorkArea.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Select a row");
        }
    }//GEN-LAST:event_viewDocActionPerformed

    private void sendCertifyResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendCertifyResultActionPerformed
        int row = workRequestTable.getSelectedRow();
        if(row<0)
            JOptionPane.showMessageDialog(this, "Select Camp To Certify");
        else{
            CampCertifyingAuthorityWorkRequest ccrequest=(CampCertifyingAuthorityWorkRequest)workRequestTable.getValueAt(row, 0);
            if(null!=ccrequest){
              if(certifyJButton.isSelected()){
                    ccrequest.setCertified(true);
                    JOptionPane.showMessageDialog(null,"Sent To Camp Successfully");
              }else if(notCertifyJButton.isSelected()){
                    ccrequest.setCertified(false);
                    JOptionPane.showMessageDialog(null,"Sent To Camp Successfully");
              }else{
                JOptionPane.showMessageDialog(null,"Check if certified ");
                return;
              }  
            }
        }
    }//GEN-LAST:event_sendCertifyResultActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton certifyJButton;
    private javax.swing.JLabel displayPic;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton notCertifyJButton;
    private javax.swing.JButton sendCertifyResult;
    private javax.swing.JButton viewDoc;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
